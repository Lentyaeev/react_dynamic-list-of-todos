{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onTodoSelected","toogleModal","isModalVisible","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","onFilter","filter","quary","setQuary","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","isLoading","setIsLoading","selectedUser","setSelectedUser","useEffect","userId","response","href","email","App","setTodos","setSelectedTodo","setModalVisible","setFilter","prevstate","preparedGoods","list","todoList","todoItem","includes","filterList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.037cbe9a.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onTodoSelected: (todo: Todo) => void;\n  toogleModal: () => void;\n  isModalVisible: boolean,\n  selectedTodo: Todo,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, onTodoSelected, toogleModal, isModalVisible, selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={(todo === selectedTodo && isModalVisible)\n              ? 'has-background-info-light' : ''}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n              && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onTodoSelected(todo);\n                  toogleModal();\n                }}\n              >\n                <span className=\"icon\">\n                  {!isModalVisible\n                    ? (<i className=\"far fa-eye-slash\" />)\n                    : (<i className=\"far fa-eye\" />)}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  onFilter: (_:string) => void;\n  filter: string;\n  quary: string;\n  setQuary: (_:string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onFilter, filter, quary, setQuary,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => onFilter(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={quary}\n          onChange={(event) => setQuary(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuary('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  toogleModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, toogleModal }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(response => {\n      setSelectedUser(response);\n      setIsLoading(false);\n    });\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo №${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={toogleModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.email}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo>(todos[0]);\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [quary, setQuary] = useState('');\n  const [filter, setFilter] = useState('');\n\n  const filterList = (list: Todo[]) => {\n    let todoList = list.filter(todoItem => todoItem.title.includes(quary));\n\n    switch (filter) {\n      case 'all': break;\n      case 'completed': todoList = todoList.filter(todoItem => todoItem.completed); break;\n      case 'active': todoList = todoList.filter(todoItem => !todoItem.completed); break;\n      default: break;\n    }\n\n    return todoList;\n  };\n\n  const toogleModal = () => {\n    setModalVisible(prevstate => !prevstate);\n  };\n\n  useEffect(() => {\n    getTodos().then(response => {\n      setTodos(response);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const preparedGoods = filterList(todos);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilter={setFilter}\n                filter={filter}\n                quary={quary}\n                setQuary={setQuary}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? <Loader />\n                : (\n                  <TodoList\n                    todos={preparedGoods}\n                    onTodoSelected={setSelectedTodo}\n                    toogleModal={toogleModal}\n                    isModalVisible={isModalVisible}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalVisible && <TodoModal todo={selectedTodo} toogleModal={toogleModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}